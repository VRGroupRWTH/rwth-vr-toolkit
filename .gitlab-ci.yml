#-------------------------------------------------------------------------------
# Copyright (c) 2022 RWTH Aachen University, Germany,
# Virtual Reality & Immersive Visualisation Group.
#-------------------------------------------------------------------------------

# The include file can be change to either be removed or reference a specific commit.

include:
  - project: '${UNREAL_CI_PROJECT}'
    ref: master
    file: '/shared_scripts.yml'
    
# In this file you are able to configure your plugins pipeline.
# If you want to customize something, either overwrite things that are defined in the shared_scripts repository,
# or remove the "extends" and write your own scripts
# 
# If you want your pipeline to run on every commit, just remove the "only" blocks. Keep in mind, that a build
# can take some time.
# 
# If you want to alter the unreal-building process two variables are defined for either changing the CLIENT_CONFIG or
# for adding EXTRA_ARGS to the building process
# 
# For the generate stage, you can specify needed dependencies in GEN_DEPENDENCIES with [Branch@PluginFolder] as key
# Example:
#
# Generate_Project:
#    only: ['web', 'schedules']
#    extends: .Generate_Project_
#    variables:
#        GEN_TEMPLATE_REPO: "https://git-ce.rwth-aachen.de/vr-vis/VR-Group/unreal-development/unrealprojecttemplate.git"
#        GEN_TEMPLATE_BRANCH: "4.26"
#        GEN_DEPENDENCIES: "(
#            [4.26@RWTHVRToolkit]='https://git-ce.rwth-aachen.de/vr-vis/VR-Group/unreal-development/Plugins/rwth-vr-toolkit.git'
#            [4.26@UniversalLogging]='https://git-ce.rwth-aachen.de/vr-vis/VR-Group/unreal-development/Plugins/universallogging.git'
#        )"
#
# You can uncomment the deploy lines to deploy your project to the CAVE/VRDev. This only makes sense, if your plugin works
# with a generated project.
#
# Use the UNREAL_VERSION variable to adjust to your preferred Unreal version.

variables:
    UNREAL_VERSION: "5.3"

stages:
  - analyze
  - generate
  - build
  - deploy

clang-format:
    image: registry.git-ce.rwth-aachen.de/vr-vis/vr-group/unreal-development/plugins/rwth-vr-toolkit/alpine-analyze:latest
    tags:
        - docker-executor
        - linux
    rules:
        - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    variables:
        GIT_STRATEGY: fetch
        GIT_CHECKOUT: "true"
        GIT_DEPTH: "2"
    stage: analyze
    allow_failure: false
    script:
        - clang-format --version
        - git fetch --depth 1 origin $CI_MERGE_REQUEST_DIFF_BASE_SHA
        - echo $CI_MERGE_REQUEST_DIFF_BASE_SHA 
        - linter_errors=$(unbuffer git-clang-format --commit "$CI_MERGE_REQUEST_DIFF_BASE_SHA" *.h *.cpp -q --diff | grep -v --color=always "no modified files to format" || true)
        - echo "$linter_errors"
        - if [ ! -z "$linter_errors" ]; then echo "Detected formatting issues; please fix"; exit 1; else echo "Formatting is correct"; exit 0; fi

Generate_Project:
    rules: 
      - if: $CI_PIPELINE_SOURCE == "web"
      - if: $CI_PIPELINE_SOURCE == "schedule"
      - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      - if: $CI_COMMIT_TAG
      - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    extends: .Generate_Project_
    variables:
        RUN_SETUP: "false"
        GEN_DEPENDENCIES: "(
            [master@UnrealDTrackPlugin]='https://github.com/VRGroupRWTH/UnrealDTrackPlugin.git'
            [dev/5.3@RWTHVRCluster]='https://git-ce.rwth-aachen.de/vr-vis/VR-Group/unreal-development/plugins/rwth-vr-cluster-plugin.git'
            )"

Generate_Project_Without_Cluster:
    extends: Generate_Project
    variables:
        GEN_DEPENDENCIES: "(
            [master@UnrealDTrackPlugin]='https://github.com/VRGroupRWTH/UnrealDTrackPlugin.git'
            )"

Build_Windows:
    rules: 
      - if: $CI_PIPELINE_SOURCE == "web"
      - if: $CI_PIPELINE_SOURCE == "schedule"
      - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      - if: $CI_COMMIT_TAG
      - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    extends: .Build_Windows_
    tags:
        - windows
        - unreal
    variables:
        GIT_STRATEGY: none   
        GIT_CHECKOUT: "false"
        # CLIENT_CONFIG: "Shipping"
        CLIENT_CONFIG: "DebugGame"
    needs:
        - job: "Generate_Project"
          artifacts: true
    
Build_Linux:
    rules: 
      - if: $CI_PIPELINE_SOURCE == "web"
      - if: $CI_PIPELINE_SOURCE == "schedule"
      - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      - if: $CI_COMMIT_TAG
      - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    extends: .Build_Linux_
    tags:
        - linux
        - unreal
        - docker-executor
    variables:
        GIT_STRATEGY: none   
        GIT_CHECKOUT: "false"
        # CLIENT_CONFIG: "Shipping"
        CLIENT_CONFIG: "DebugGame"
    needs:
        - job: "Generate_Project"
          artifacts: true


# Builds for linux without the cluster plugin
Build_Linux_Without_Cluster:
    extends: Build_Linux
    needs:
        - job: "Generate_Project_Without_Cluster"
          artifacts: true

# Deploys to vrdev
Deploy_Windows:
    rules: 
      - if: $CI_PIPELINE_SOURCE == "web"
      - if: $CI_PIPELINE_SOURCE == "schedule"
    extends: .Deploy_VRDev_
    needs:
        - job: "Build_Windows"
          artifacts: true          

# Deploys to vrdemo instead of av006de. Use extends: .Deploy_CAVE_ to deploy to legacy av006de
Deploy_CAVE:
    rules: 
      - if: $CI_PIPELINE_SOURCE == "web"
      - if: $CI_PIPELINE_SOURCE == "schedule"
    extends: .Deploy_vrdemo_
    needs:
        - job: "Build_Linux"
          artifacts: true
